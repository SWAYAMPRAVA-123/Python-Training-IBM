Bitwise Operators
-----------------

5 = 0101
3 = 0011

or 

0101
0011
----
0111   => 0 + 2 ** 2 + 2 ** 1 + 2 ** 0
----   => 0 + 4 + 2 + 1
       => 7
-------------------------------------
and

0101
0011
----
0001  - 0 + 0 + 0 + 2 ** 0
----  - 0 + 1
      - 1

xor

0  0   0
1  1   0
1  0   1
0  1   1

0101
0011
----
0110  = 0 + 2 ** 2 + 2 ** 1 + 0
----  = 4 + 2
      = 6

----------------------------------
shift operator
--------------
5 << 1

0101 << 1
1010  - 2 ** 3 + 0 + 2 ** 1 + 0
      = 8 + 2
      = 10

8 - 1000 
8 << 1 
  - 10000 = 2 ** 4 => 16

5 - 0101
5 << 1
1010
5 << 2
10100 = 2 ** 4 + 2 ** 2
	16 + 4
	20

16 - 10000
16 >> 1
1000 = 8

5 = 0101
5 >> 1 0010
   = 2 ** 1
   = 2
   

Strings
=======
anything enclosed in " " or ' '

strings are immutable


OOPS
----

class Employee:

   def __init__(self, name):
	self.name = name

   # getter
   def get_name(self):
       	print(self.name)

  


emp = Employee("Kevin")
emp.get_name()	-> Kevin


strings are enclosed in "" or '' - single line string

strings are enclosed in """  """ or '''  ''' - mutilple line string

st[0:5:1]

start : stop : incr

incr by default is 1

st[0:20:2]

------------------------------------------------------------

‘123.123.123.123 - - [26/Apr/2000:00:23:48 -0400] "GET /pics/mypics.gif
HTTP/1.0" 200 6248 "http://www.abcxyz.com/asctortf/" "Mozilla/4.05
(Macintosh; I; PPC)"’

Writing program to extract below information using string class methods
o IP
o DATE
o PICS
o URL


------------------------------------------

st = "geethanjali12345"

result = ilajnatheeg54321


Loops and Controlstructures
---------------------------

Loops
-----
1. for loop
2. while loop

print
-----
print(data, sep="", end="\n")

print("hello")
print("world")

hello 
world

User input
----------
string = input(prompt)

uname = input("Enter your name :")



Python Datastructures
---------------------
1. list
2. dictionary
3. tuple
4. set

-------------------------------------------------------------

1. 1
   2 3
   4 5 6
   7 8 9 10

2.    1 
     1 2
    1 2 3
   1 2 3 4
  1 2 3 4 5
   1 2 3 4
    1 2 3
     1 2
      1

3.  1 2 3 4 5
     1 2 3 4
      1 2 3
       1 2
        1
       2 1
      3 2 1
     4 3 2 1
    5 4 3 2 1


4. write a code to generate prime numbers between 150 and 50

5. write a code to generate fibanocci series

























